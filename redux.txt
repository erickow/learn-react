Redux: State management 

Redux cycle:
  1. Action creator : a function that return a plain js object, create an action
  2. Action : action when access the redux
  3. dispatch : make copy of object to pass on reducer
  4. Reducers : function that responsible an action and by type of action
  5. State : all information that has been created by reducer



codepen example:

console.clear()

const createPolicy = (name, amount) => {
  return {
    type: 'CREATE_POLICY',
    payload: {
      name: name,
      amount: amount
    }
  };
};

const deletePolicy = (name, amount) => {
  return {
    type: 'DELETE_POLICY',
    payload: {
      name: name,
      amount: amount
    }
  };
};

const createClaim = (name, amountOfMoneyToCollect) => {
  return {
    type: 'CREATE_CLAIM',
    payload: {
      name: name,
      amountOfMoneyToCollect: amountOfMoneyToCollect
    }
  };
};

//Reducers 
const claimsHistory = (oldListOfClaims = [], action) => {
  if(action.type === 'CREATE_CLAIM'){
     return [...oldListOfClaims, action.payload]
  }
  return oldListOfClaims
};

const accounting = (bagOfMoney = 100, action) => {
  if(action.type === 'CREATE_CLAIM'){
     return bagOfMoney - action.payload.amountOfMoneyToCollect;
  }
  else if(action.type === 'CREATE_POLICY') {
    return bagOfMoney + action.payload.amount;
  }
  return bagOfMoney;
};

const policies = (listOfPolicies = [], action) => {
  if(action.type === 'CREATE_POLICY') {
    return [...listOfPolicies, action.payload.name];
  }else if (action.type === 'DELETE_POLICY'){
    return listOfPolicies.filter(name => name != action.payload.name);
  }
  return listOfPolicies;
};

const {createStore, combineReducers} = Redux;

//bind reducer function with combine reducer
const ourDepartments = combineReducers({
  accounting: accounting,
  claimsHistory: claimsHistory,
  policies: policies
})

const store = createStore(ourDepartments);

store.dispatch(createPolicy('Alex', 20));
store.dispatch(createPolicy('Andi', 40));
store.dispatch(createPolicy('Budi', 20));

store.dispatch(createClaim('Alex', 80));

store.dispatch(deletePolicy('Budi'))

console.log(store.getState());
